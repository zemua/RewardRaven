// Mocks generated by Mockito 5.4.4 from annotations
// in reward_raven/test/service/app/apps_fetcher_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:installed_apps/app_info.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;
import 'package:reward_raven/service/app/impl/android_apps_fetcher.dart' as _i4;
import 'package:reward_raven/service/platform_wrapper.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [PlatformWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlatformWrapper extends _i1.Mock implements _i2.PlatformWrapper {
  MockPlatformWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get platformName => (super.noSuchMethod(
        Invocation.getter(#platformName),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#platformName),
        ),
      ) as String);

  @override
  bool isAndroid() => (super.noSuchMethod(
        Invocation.method(
          #isAndroid,
          [],
        ),
        returnValue: false,
      ) as bool);
}

/// A class which mocks [AndroidAppsFetcher].
///
/// See the documentation for Mockito's code generation for more information.
class MockAndroidAppsFetcher extends _i1.Mock
    implements _i4.AndroidAppsFetcher {
  MockAndroidAppsFetcher() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i6.AppInfo>> fetchInstalledApps() => (super.noSuchMethod(
        Invocation.method(
          #fetchInstalledApps,
          [],
        ),
        returnValue: _i5.Future<List<_i6.AppInfo>>.value(<_i6.AppInfo>[]),
      ) as _i5.Future<List<_i6.AppInfo>>);

  @override
  _i5.Future<List<_i6.AppInfo>> fetchAllApps() => (super.noSuchMethod(
        Invocation.method(
          #fetchAllApps,
          [],
        ),
        returnValue: _i5.Future<List<_i6.AppInfo>>.value(<_i6.AppInfo>[]),
      ) as _i5.Future<List<_i6.AppInfo>>);

  @override
  bool hasHiddenApps() => (super.noSuchMethod(
        Invocation.method(
          #hasHiddenApps,
          [],
        ),
        returnValue: false,
      ) as bool);
}
