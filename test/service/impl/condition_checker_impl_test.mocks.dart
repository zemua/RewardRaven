// Mocks generated by Mockito 5.4.4 from annotations
// in reward_raven/test/service/impl/condition_checker_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:reward_raven/db/entity/time_log.dart' as _i2;
import 'package:reward_raven/db/service/time_log_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTimeLog_0 extends _i1.SmartFake implements _i2.TimeLog {
  _FakeTimeLog_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TimeLogService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTimeLogService extends _i1.Mock implements _i3.TimeLogService {
  @override
  _i4.Future<void> addToTotal(_i2.TimeLog? timelog) => (super.noSuchMethod(
        Invocation.method(
          #addToTotal,
          [timelog],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.TimeLog> getTotalDuration() => (super.noSuchMethod(
        Invocation.method(
          #getTotalDuration,
          [],
        ),
        returnValue: _i4.Future<_i2.TimeLog>.value(_FakeTimeLog_0(
          this,
          Invocation.method(
            #getTotalDuration,
            [],
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.TimeLog>.value(_FakeTimeLog_0(
          this,
          Invocation.method(
            #getTotalDuration,
            [],
          ),
        )),
      ) as _i4.Future<_i2.TimeLog>);

  @override
  _i4.Future<void> addToGroup(
    _i2.TimeLog? timelog,
    String? groupId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToGroup,
          [
            timelog,
            groupId,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.TimeLog> getGroupDurationForLastDays(
    String? groupId,
    int? lastDays,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupDurationForLastDays,
          [
            groupId,
            lastDays,
          ],
        ),
        returnValue: _i4.Future<_i2.TimeLog>.value(_FakeTimeLog_0(
          this,
          Invocation.method(
            #getGroupDurationForLastDays,
            [
              groupId,
              lastDays,
            ],
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.TimeLog>.value(_FakeTimeLog_0(
          this,
          Invocation.method(
            #getGroupDurationForLastDays,
            [
              groupId,
              lastDays,
            ],
          ),
        )),
      ) as _i4.Future<_i2.TimeLog>);
}
