// Mocks generated by Mockito 5.4.4 from annotations
// in reward_raven/test/db/service/time_log_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:firebase_database/firebase_database.dart' as _i6;
import 'package:logger/logger.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:reward_raven/db/entity/time_log.dart' as _i3;
import 'package:reward_raven/db/repository/time_log_repository.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLogger_0 extends _i1.SmartFake implements _i2.Logger {
  _FakeLogger_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTimeLog_1 extends _i1.SmartFake implements _i3.TimeLog {
  _FakeTimeLog_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TimeLogRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTimeLogRepository extends _i1.Mock implements _i4.TimeLogRepository {
  @override
  _i2.Logger get logger => (super.noSuchMethod(
        Invocation.getter(#logger),
        returnValue: _FakeLogger_0(
          this,
          Invocation.getter(#logger),
        ),
        returnValueForMissingStub: _FakeLogger_0(
          this,
          Invocation.getter(#logger),
        ),
      ) as _i2.Logger);

  @override
  _i5.Future<void> addToTotal(_i3.TimeLog? timeLog) => (super.noSuchMethod(
        Invocation.method(
          #addToTotal,
          [timeLog],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i3.TimeLog> getTotalDuration() => (super.noSuchMethod(
        Invocation.method(
          #getTotalDuration,
          [],
        ),
        returnValue: _i5.Future<_i3.TimeLog>.value(_FakeTimeLog_1(
          this,
          Invocation.method(
            #getTotalDuration,
            [],
          ),
        )),
        returnValueForMissingStub: _i5.Future<_i3.TimeLog>.value(_FakeTimeLog_1(
          this,
          Invocation.method(
            #getTotalDuration,
            [],
          ),
        )),
      ) as _i5.Future<_i3.TimeLog>);

  @override
  _i5.Future<void> addToGroup(
    _i3.TimeLog? timeLog,
    String? groupId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToGroup,
          [
            timeLog,
            groupId,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i3.TimeLog> getGroupTotalDuration(
    String? groupId,
    DateTime? dateTime,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupTotalDuration,
          [
            groupId,
            dateTime,
          ],
        ),
        returnValue: _i5.Future<_i3.TimeLog>.value(_FakeTimeLog_1(
          this,
          Invocation.method(
            #getGroupTotalDuration,
            [
              groupId,
              dateTime,
            ],
          ),
        )),
        returnValueForMissingStub: _i5.Future<_i3.TimeLog>.value(_FakeTimeLog_1(
          this,
          Invocation.method(
            #getGroupTotalDuration,
            [
              groupId,
              dateTime,
            ],
          ),
        )),
      ) as _i5.Future<_i3.TimeLog>);

  @override
  _i5.Future<void> add(
    _i3.TimeLog? timeLog,
    _i6.DatabaseReference? reference,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #add,
          [
            timeLog,
            reference,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
